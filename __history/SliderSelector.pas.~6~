unit SliderSelector;

interface

uses Types, Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.Imaging.pngimage, Colors;

  procedure DrawVertSelectorDuo(Selector: TVertSelectorDuo);
  procedure ToggleSliderSelector(Selector: TVertSelectorDuo);

implementation



procedure DrawVertSelectorDuo(Selector: TVertSelectorDuo);
begin
  with Selector.Bitmap.Canvas do
  begin
    Brush.Color:= LightBoxColor;
    Pen.Color:= LightGrey;
    if Selector.Selected = 0 then
    begin
      RoundRect(0,0,Selector.Width, Selector.Height, Selector.Height, Selector.Height);
      Brush.Color:= LightBlueSelected;
      RoundRect(0,0,Selector.Width div 2, Selector.Height, Selector.Height, Selector.Height);
    end;
  end;
  Selector.Image.Picture.Bitmap:= Selector.Bitmap;
end;

procedure ToggleSliderSelector(Selector: TVertSelectorDuo);
var
I: Integer;
begin
  if Selector.Selected = 0 then
  begin
    with Selector.Bitmap.Canvas do
    begin
      for I := 1 to (Selector.Width div 2) do
      begin
        TThread.Synchronize(nil,
          procedure
          begin
            Brush.Color:= LightBoxColor;
            Pen.Color:= LightGrey;
            RoundRect(0,0, Selector.Width, Selector.Height, Selector.Height, Selector.Height);
            Brush.Color:= LightBlueSelected;
            RoundRect(0+i,0,Selector.Width div 2+i, Selector.Height, Selector.Height, Selector.Height);
            Selector.Image.Picture.Bitmap:= Selector.Bitmap;
          end
        );
        sleep(10);
      end;
    end;
  end;

  if Selector.Selected = 1 then
  begin
    with Selector.Bitmap.Canvas do
    begin
      for I := (Selector.Width div 2) downto 0 do
      begin
        TThread.Synchronize(nil,
          procedure
          begin
            {Brush.Color:= LightBoxColor;
            Pen.Color:= LightGrey;
            RoundRect(0,0,Selector.Width, Selector.Height, Selector.Height, Selector.Height);
            Brush.Color:= LightBlueSelected;
            RoundRect((Selector.Width div 2)-i,0,Selector.Width-i, Selector.Height, Selector.Height, Selector.Height);
            Selector.Image.Picture.Bitmap:= Selector.Bitmap;}
            Brush.Color:= clBlue;
            RoundRect(0,0,Selector.Width, Selector.Height, Selector.Height, Selector.Height);
             Selector.Image.Picture.Bitmap:= Selector.Bitmap;
          end
        );
        sleep(10);
      end;
    end;
  end;
end;

end.
