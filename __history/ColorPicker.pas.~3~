unit ColorPicker;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.Imaging.pngimage, CreateObjects, Types, Vcl.AppEvnts;

type
  TColorPickerForm = class(TForm)
    ApplicationEvents1: TApplicationEvents;
    TopBarImage: TImage;
    procedure FormCreate(Sender: TObject);
    procedure DrawTopBar;
    procedure TopBarImageMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure CreateColorPicker;
  private
    { Private-Deklarationen }
  public
    { Public-Deklarationen }
  end;

var
  ColorPickerForm: TColorPickerForm;
  TopBarBitmap: TBitmap;
  GradientMode, ColorMode: Boolean;

  SelectorGradientMode, SelectorColorode: TTab;

implementation

uses
   MainUnit, Convert, Colors;

{$R *.dfm}

procedure TColorPickerForm.FormCreate(Sender: TObject);
var
  regn: HRGN;
begin
  DefineColors;
  regn := CreateRoundRectRgn(0, 0,ClientWidth,ClientHeight,40,40);
  SetWindowRgn(Handle, regn, True);
  ColorPickerForm.Color:= clSettingsBackground;
  DrawTopBar;



end;

procedure TColorPickerForm.TopBarImageMouseDown(Sender: TObject;
  Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
  const
  SC_DRAGMOVE = $F012;
begin
  if Button = mbLeft then
  begin
    ReleaseCapture;
    Perform(WM_SYSCOMMAND, SC_DRAGMOVE, 0);
  end;
end;

procedure TColorPickerForm.CreateColorPicker;
begin
  //

end;

procedure CreateGradientMode;
begin

end;

procedure TColorPickerForm.DrawTopBar;
begin
  TopBarBitmap:= TBitmap.Create;
  TopBarBitmap.Height:= 50;
  TopBarBitmap.Width:= ColorPickerForm.Width;
  with TopBarBitmap.Canvas do
  begin
    brush.Color:= clBoxColor;
    pen.Color:= clBoxColor;
    Rectangle(0,0, ColorPickerForm.Width, 50);
  end;
  TopBarImage.Picture.Bitmap:= TopBarBitmap;
end;

end.
